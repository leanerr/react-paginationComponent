{"version":3,"sources":["components/Loader/Loader.js","components/Loader/index.js","components/Pagination/Pagination.js","components/Pagination/index.js","App.js","config/env.js","reportWebVitals.js","index.js"],"names":["Loader","this","props","loading","tabIndex","className","viewBox","xmlns","width","height","stroke","fill","fillRule","transform","strokeWidth","strokeOpacity","cx","cy","r","d","attributeName","type","from","to","dur","repeatCount","Component","Pagination","onClickFirstPage","isInFirstPage","onPageChanged","onClickPreviousPage","currentPage","onClickPage","page","onClickNextPage","isInLastPage","onClickLastPage","totalPages","maxVisibleButtons","Math","min","startPage","pages","i","push","onClick","isPageActive","endPage","disabled","App","inputPageChange","e","isNaN","parseInt","target","value","setState","enterpageno","state","showLoader","listItems","recordsPerPage","loadListItem","axios","get","then","response","floor","data","totalPassengers","event","style","padding","map","item","index","src","airline","logo","alt","name","country","website","established","length","marginTop","marginLeft","onChange","onChangeRecordsPerPage","background","gotoPage","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce085149.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './style.css';\n\nexport class Loader extends Component {\n  render() {\n    return (\n      this.props.loading ?\n      <div tabIndex=\"0\" className=\"loader-overlay is-active is-full-page\" aria-label=\"Loading\">\n        <div className=\"loader-background\"></div>\n        <svg viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" stroke=\"red\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n              <circle strokeOpacity=\".25\" cx=\"18\" cy=\"18\" r=\"18\"/>\n              <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n                <animateTransform\n                  attributeName=\"transform\"\n                  type=\"rotate\"\n                  from=\"0 18 18\"\n                  to=\"360 18 18\"\n                  dur=\"0.8s\"\n                  repeatCount=\"indefinite\"/>\n              </path>\n            </g>\n          </g>\n        </svg>\n      </div> : <div />\n    )\n  }\n}\n\nexport default Loader;\n","import Loader from './Loader';\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nexport class Pagination extends Component {\n  isInFirstPage () {\n    return this.props.currentPage === 1\n  }\n  isInLastPage () {\n    if (this.props.totalPages === 0) {\n      return true\n    }\n    return this.props.currentPage === this.props.totalPages\n  }\n  startPage () {\n    // When on the first page\n    if (this.props.currentPage === 1) {\n      return 1\n    }\n    // When on the last page\n    if (this.props.totalPages < this.props.maxVisibleButtons) {\n      return 1\n    }\n    if (this.props.currentPage === this.props.totalPages) {\n      return this.props.totalPages - this.props.maxVisibleButtons + 1\n    }\n    // When in between\n    return this.props.currentPage - 1\n  }\n  endPage () {\n    if (this.props.totalPages === 0) {\n      return 1\n    }\n    if (this.props.totalPages < this.props.maxVisibleButtons) {\n      return this.props.totalPages\n    }\n    return Math.min(this.startPage() + this.props.maxVisibleButtons - 1, this.props.totalPages)\n  }\n\n  onClickFirstPage = () => {\n    if (this.isInFirstPage()) {\n      return false\n    }\n    this.props.onPageChanged(1)\n  }\n  onClickPreviousPage = () => {\n    if (this.isInFirstPage()) {\n      return false\n    }\n    this.props.onPageChanged(this.props.currentPage - 1)\n  }\n  onClickPage = (page) => {\n    this.props.onPageChanged(page)\n  }\n  onClickNextPage = () => {\n    if (this.isInLastPage()) {\n      return false\n    }\n    this.props.onPageChanged(this.props.currentPage + 1)\n  }\n  onClickLastPage = () => {\n    if (this.isInLastPage()) {\n      return false\n    }\n    this.props.onPageChanged(this.props.totalPages)\n  }\n  isPageActive (page) {\n    return this.props.currentPage === page\n  }\n  render() {\n    var pages = []\n    for (let i = this.startPage(); i <= this.endPage(); i++) {\n      pages.push(\n        <li key={i} className=\"pagination-item\">\n          <button onClick={ () => { this.onClickPage(i) } } className={ this.isPageActive(i) ? 'active': '' }>{ i }</button>\n        </li>\n      )\n    }\n    return (\n      <ul className=\"pagination\">\n        <li className=\"pagination-item\">\n          <button onClick={ () => this.onClickFirstPage() } className={ this.isInFirstPage() ? 'disabled': '' } disabled={ this.isInFirstPage() }>First</button>\n        </li>\n        <li className=\"pagination-item\">\n          <button onClick={ () => this.onClickPreviousPage() } className={ this.isInFirstPage() ? 'disabled': '' } disabled={ this.isInFirstPage() }>«</button>\n        </li>\n        { pages }\n        <li className=\"pagination-item\">\n          <button onClick={ () => this.onClickNextPage() } className={ this.isInLastPage() ? 'disabled':'' } disabled={ this.isInLastPage() }>»</button>\n        </li>\n        <li className=\"pagination-item\">\n          <button onClick={ () => this.onClickLastPage() } className={ this.isInLastPage() ? 'disabled':'' } disabled={ this.isInLastPage() }>Last</button>\n        </li>\n      </ul>\n    )\n  }\n}\n\nPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  maxVisibleButtons: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;\n","import Pagination from './Pagination';\n\nexport default Pagination;\n","import React from 'react';\nimport axios from 'axios';\nimport { Loader, Pagination } from './components';\nimport { baseApiURL } from './config/env';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showLoader: false,\n      listItems: [],\n      page: 1,\n      totalPages: 0,\n      recordsPerPage: 4,\n      enterpageno: ''\n    }\n  }\n\n  componentDidMount() {\n    this.loadListItem();\n  }\n\n  loadListItem () {\n    this.setState({ showLoader: true });\n    axios.get(`${baseApiURL}/v1/passenger?page=${this.state.page}&size=${this.state.recordsPerPage}`)\n      .then(response => {\n        const totalPages = Math.floor(response.data.totalPassengers / this.state.recordsPerPage) // Calculate total records\n        this.setState({ showLoader: false, listItems: response.data.data, totalPages: totalPages })\n      })\n  }\n\n  onChangeRecordsPerPage (event) {\n    this.setState ({ recordsPerPage: parseInt(event.target.value) }, () => {\n      this.loadListItem()\n    })\n  }\n\n  gotoPage () {\n    if (!isNaN(parseInt(this.state.enterpageno))) {\n      this.setState({ page: parseInt(this.state.enterpageno) })\n      this.loadListItem()\n    }\n  }\n\n  onPageChanged (page) {\n    this.setState ({ page: page }, () => {\n      this.loadListItem()\n    })\n  }\n\n  inputPageChange = (e) => {\n    if (!isNaN(parseInt(e.target.value))) {\n      this.setState({ enterpageno: parseInt(e.target.value) })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{padding : \"5%\"}}>\n        <Loader loading={this.state.showLoader} />\n        <h2>Pagination(navigator) Component with React.js</h2>\n        <h3> Assignment 1</h3> \n        <ul className=\"flex-container\">\n        {\n          this.state.listItems.map((item, index) => {\n            return (<li key={index} className=\"flex-item\">\n              <img  src={item.airline[0] && item.airline[0].logo} alt={item.airline[0] && item.airline[0].name} />\n              <h5>Passenger: {item.name}</h5>\n              <h6>Airline: {item.airline[0] && item.airline[0].name}</h6>\n              <h6>Country: {item.airline[0] && item.airline[0].country}</h6>\n              <h6>website: {item.airline[0] && item.airline[0].website}</h6>\n              <h6>established: {item.airline[0] && item.airline[0].established}</h6>\n\n            </li>)\n          })\n        }\n        {\n          this.state.listItems.length === 0 ? \n          <li className=\"flex-item center\">No Record Found</li>: <li />\n        }\n        </ul>\n        <div style={{marginTop : \"5%\",marginLeft : \"6%\"}}>\n\n        <ul className=\"showItems\" >\n          <li> Items in every Page : \n            <select onChange={ (e) => { this.onChangeRecordsPerPage(e) } }>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"15\">15</option>\n              <option value=\"20\">20</option>\n              <option value=\"30\">30</option>\n              <option value=\"40\">40</option>\n              <option value=\"50\">50</option>\n              <option value=\"100\">100</option>\n            </select>\n            \n          </li>\n          <li>\n            Go to Page <input type=\"text\" value={this.state.enterpageno} onChange={(e) => { this.inputPageChange(e)} } /><button type=\"button\" style={{ background : \"rgb(125, 111, 163)\"}} onClick={ () => this.gotoPage() }>Go</button>\n          </li>\n        </ul>\n      \n        {\n          this.state.listItems.length > 0 ?\n          <Pagination \n          totalPages={this.state.totalPages}\n           currentPage={this.state.page}\n           maxVisibleButtons={ 3 } onPageChanged={ (e) => this.onPageChanged(e) }/> : \n          \n           <div />\n        }\n\n\n\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/**\n * baseAPIUrl\n */\nconst baseApiURL = 'https://api.instantwebtools.net'\n\nexport {\n  baseApiURL\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}